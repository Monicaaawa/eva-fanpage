{"version":3,"file":"component---src-pages-using-ssr-js-d0a7849b52b9502e66d2.js","mappings":"6LAmCA,MAhCe,IAEX,8BACE,uBAAKA,UAAU,eACb,yCAIA,2BAEA,uBAAKA,UAAU,QACb,2BACE,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAG,SAEd,2BACE,qBAAGC,KAAK,WAAS,UAEnB,2BACE,gBAAC,EAAAF,KAAI,CAACC,GAAG,eAAa,eAExB,2BACE,gBAAC,EAAAD,KAAI,CAACC,GAAG,gBAAc,mBCXnC,MATeE,GAEX,2BACE,gBAAC,EAAM,MACNA,EAAMC,S,+CCoCb,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEC,EAAW,MAAEC,EAAK,SAAEF,GAAU,EAC3C,MAAM,KAAEG,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBJ,MAExC,OACE,gCACE,6BAAQK,EAAkBL,EAAK,MAAMK,EAAiBL,GACtD,wBAAMM,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASP,IACnC,wBAAMQ,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,aAAjB,EAAmBK,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASP,IACpC,wBAAMM,KAAK,sBAAsBC,QAASJ,IACzCL,EAGP,C,6GCpCA,MA4BaY,EAAO,IAAM,gBAAC,IAAG,CAACV,MAAM,cAErC,UA9BiB,IAAoB,IAAnB,WAAEW,GAAY,EAC9B,OACE,gBAAC,IAAM,KACL,0CACe,kDAEf,4IAE+C,IAC7C,qEAAkD,KAEpD,uBACEC,MAAO,CAAEC,MAAO,QAASC,aAAc,wBACvCC,IAAI,eACJC,IAAKL,EAAWM,UAElB,2DACkC,IAChC,qBAAGrB,KAAK,oFAAkF,6CAEtF,KAGN,gBAAC,EAAAF,KAAI,CAACC,GAAG,KAAG,2BACL,C","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/using-ssr.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = () => {\n  return (\n    <header>\n      <div className=\"eva-heading\">\n        <h3>\n          新世紀エヴァンゲリオン\n        </h3>\n\n        <br></br>\n\n        <div className=\"flex\">\n          <div>\n            <Link to=\"/\">HOME</Link>\n          </div>\n          <div>\n            <a href=\"/#intro\">STORY</a>\n          </div>\n          <div>\n            <Link to=\"/characters\">CHARACTERS</Link>\n          </div>\n          <div>\n            <Link to=\"/evangelions\">EVANGELIONS</Link>\n          </div>\n        </div>\n      </div>\n\n      \n      \n    </header>\n  )\n}\n\nexport default Header\n","import React from \"react\"\nimport Header from \"./header\"\nimport \"../styles/style.css\"\n\nconst Layout = props => {\n  return (\n    <div>\n      <Header />\n      {props.children}\n    </div>\n  )\n}\n\nexport default Layout","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingSSR = ({ serverData }) => {\n  return (\n    <Layout>\n      <h1>\n        This page is <b>rendered server-side</b>\n      </h1>\n      <p>\n        This page is rendered server side every time the page is requested.\n        Reload it to see a(nother) random photo from{\" \"}\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\n      </p>\n      <img\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\n        alt=\"A random dog\"\n        src={serverData.message}\n      />\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\n          documentation about Server Side Rendering\n        </a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"Using SSR\" />\n\nexport default UsingSSR\n\nexport async function getServerData() {\n  try {\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n}\n"],"names":["className","Link","to","href","props","children","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","Head","serverData","style","width","borderRadius","alt","src","message"],"sourceRoot":""}